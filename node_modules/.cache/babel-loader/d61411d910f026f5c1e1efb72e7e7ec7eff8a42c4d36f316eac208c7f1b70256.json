{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import axios from'axios';import'./App.css';// Import your CSS styles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[messages,setMessages]=useState([]);const[todos,setTodos]=useState([]);const[showTodos,setShowTodos]=useState(false);const chatContainerRef=useRef(null);const robotEyesRef=useRef([null,null]);// Ref for robot's eyes\nconst[notes,setNotes]=useState([]);const reminderIntervals=useRef([]);useEffect(()=>{fetchTodos();},[]);const fetchTodos=async()=>{try{const response=await axios.get('http://localhost:8080/todos');setTodos(response.data);}catch(error){console.error('Error fetching todos:',error);}};const handleSendMessage=async e=>{e.preventDefault();const newMessage=e.target.message.value;if(newMessage.trim()!==''){const userMessage={text:newMessage,sender:'user'};setMessages([...messages,userMessage]);try{const response=await axios.post('http://localhost:8080/send-message',{message:newMessage});const botMessage={text:response.data.message,sender:'assistant'};setMessages(prevMessages=>[...prevMessages,botMessage]);if(response.data.message.startsWith('Opening')){const siteUrl=response.data.message.substring(8).trim();window.open(siteUrl,'_blank');}if(response.data.message.startsWith('Reminder set:')){const reminderMessage=response.data.message.substring(14).trim();setReminder(reminderMessage);}if(response.data.message==='All reminders stopped.'){stopAllReminders();}if(response.data.message==='Fetching your to-do list...'){setShowTodos(true);}if(response.data.message.startsWith('Adding to your to-do list:')){const task=response.data.message.substring(25).trim();addTodoTask(task);}if(response.data.message.startsWith('Removing item from your to-do list with ID:')){const taskId=response.data.message.substring(42).trim();removeTodoTask(taskId);}if(response.data.message.startsWith('Note taken!')){const noteId=response.data.noteId;const confirmationMessage=\"Note taken! Note ID: \".concat(noteId,\".\");const fetchInstruction=\"To fetch this note back, say 'fetch note \".concat(noteId,\"'.\");const botMessages=[{text:confirmationMessage,sender:'assistant'},{text:fetchInstruction,sender:'assistant'}];setMessages(prevMessages=>[...prevMessages,...botMessages]);}}catch(error){console.error('Error sending message:',error);}e.target.message.value='';}};const setReminder=reminderMessage=>{if(reminderMessage.includes('every')){const[task,interval]=reminderMessage.split(' every ');const intervalMinutes=parseInt(interval,10);if(!isNaN(intervalMinutes)){const intervalId=setInterval(()=>{alert(\"Reminder: \".concat(task));},intervalMinutes*60*1000);reminderIntervals.current.push(intervalId);}}else{const[task,time]=reminderMessage.split(' at ');const now=new Date();const reminderTime=new Date(now.toDateString()+' '+time);if(reminderTime<now){reminderTime.setDate(reminderTime.getDate()+1);}const timeout=reminderTime-now;setTimeout(()=>{alert(\"Reminder: \".concat(task));},timeout);}};const stopAllReminders=()=>{reminderIntervals.current.forEach(intervalId=>clearInterval(intervalId));reminderIntervals.current=[];};const addTodoTask=async task=>{try{const response=await axios.post('http://localhost:8080/todos',{task});setTodos([...todos,response.data]);}catch(error){console.error('Error adding todo:',error);}};const removeTodoTask=async taskId=>{try{await axios.delete(\"http://localhost:8080/todos/\".concat(taskId));setTodos(todos.filter(todo=>todo.id!==parseInt(taskId,10)));}catch(error){console.error('Error removing todo:',error);}};const toggleTodoCompletion=async taskId=>{const todo=todos.find(todo=>todo.id===taskId);if(todo){try{const updatedTodo={...todo,completed:!todo.completed};await axios.put(\"http://localhost:8080/todos/\".concat(taskId),updatedTodo);setTodos(todos.map(todo=>todo.id===taskId?updatedTodo:todo));}catch(error){console.error('Error updating todo:',error);}}};useEffect(()=>{// Scroll chat to bottom whenever messages change\nif(chatContainerRef.current){chatContainerRef.current.scrollTop=chatContainerRef.current.scrollHeight;}},[messages]);// Function to update robot's eyes position\nconst updateRobotEyes=e=>{const mouseX=e.pageX;const mouseY=e.pageY;const eye1=robotEyesRef.current[0];const eye2=robotEyesRef.current[1];if(eye1&&eye2){const eyeSize=12;// Adjust based on eye size\nconst eyeCenterX=eye1.getBoundingClientRect().left+eyeSize/2;const eyeCenterY=eye1.getBoundingClientRect().top+eyeSize/2;const deltaX1=mouseX-eyeCenterX;const deltaY1=mouseY-eyeCenterY;const distance1=Math.sqrt(deltaX1*deltaX1+deltaY1*deltaY1);const deltaX2=mouseX-(eye2.getBoundingClientRect().left+eyeSize/2);const deltaY2=mouseY-(eye2.getBoundingClientRect().top+eyeSize/2);const distance2=Math.sqrt(deltaX2*deltaX2+deltaY2*deltaY2);const maxEyeMove=3;// Adjust eye movement sensitivity\neye1.style.transform=\"translate(\".concat(deltaX1/distance1*maxEyeMove,\"px, \").concat(deltaY1/distance1*maxEyeMove,\"px)\");eye2.style.transform=\"translate(\".concat(deltaX2/distance2*maxEyeMove,\"px, \").concat(deltaY2/distance2*maxEyeMove,\"px)\");}};useEffect(()=>{// Add mousemove event listener to update robot's eyes position\ndocument.addEventListener('mousemove',updateRobotEyes);return()=>{// Clean up event listener on component unmount\ndocument.removeEventListener('mousemove',updateRobotEyes);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"robot-face\",style:{top:'10px',right:'10px'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"eye\",ref:el=>robotEyesRef.current[0]=el}),/*#__PURE__*/_jsx(\"div\",{className:\"eye\",style:{left:'50%'},ref:el=>robotEyesRef.current[1]=el}),/*#__PURE__*/_jsx(\"div\",{className:\"mouth\"})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"Amute\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",ref:chatContainerRef,children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender),children:message.text},index))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"message\",className:\"message-input\",placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",children:\"Send\"})]}),showTodos&&/*#__PURE__*/_jsxs(\"div\",{className:\"todo-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your To-Do List\"}),/*#__PURE__*/_jsx(\"ul\",{children:todos.map(todo=>/*#__PURE__*/_jsxs(\"li\",{className:todo.completed?'completed':'',children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>toggleTodoCompletion(todo.id),children:todo.task}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeTodoTask(todo.id),children:\"Remove\"})]},todo.id))})]}),notes.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Notes\"}),/*#__PURE__*/_jsx(\"ul\",{children:notes.map(note=>/*#__PURE__*/_jsx(\"li\",{children:note.note},note.id))})]})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","todos","setTodos","showTodos","setShowTodos","chatContainerRef","robotEyesRef","notes","setNotes","reminderIntervals","fetchTodos","response","get","data","error","console","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","post","botMessage","prevMessages","startsWith","siteUrl","substring","window","open","reminderMessage","setReminder","stopAllReminders","task","addTodoTask","taskId","removeTodoTask","noteId","confirmationMessage","concat","fetchInstruction","botMessages","includes","interval","split","intervalMinutes","parseInt","isNaN","intervalId","setInterval","alert","current","push","time","now","Date","reminderTime","toDateString","setDate","getDate","timeout","setTimeout","forEach","clearInterval","delete","filter","todo","id","toggleTodoCompletion","find","updatedTodo","completed","put","map","scrollTop","scrollHeight","updateRobotEyes","mouseX","pageX","mouseY","pageY","eye1","eye2","eyeSize","eyeCenterX","getBoundingClientRect","left","eyeCenterY","top","deltaX1","deltaY1","distance1","Math","sqrt","deltaX2","deltaY2","distance2","maxEyeMove","style","transform","document","addEventListener","removeEventListener","className","children","right","ref","el","index","onSubmit","type","name","placeholder","onClick","length","note"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your CSS styles\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const robotEyesRef = useRef([null, null]); // Ref for robot's eyes\n  const [notes, setNotes] = useState([]);\n  const reminderIntervals = useRef([]);\n\n\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n\n        const botMessage = { text: response.data.message, sender: 'assistant' };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n\n        if (response.data.message === 'Fetching your to-do list...') {\n          setShowTodos(true);\n        }\n\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n        if (response.data.message.startsWith('Note taken!')) {\n          const noteId = response.data.noteId;\n          const confirmationMessage = `Note taken! Note ID: ${noteId}.`;\n          const fetchInstruction = `To fetch this note back, say 'fetch note ${noteId}'.`;\n          const botMessages = [\n            { text: confirmationMessage, sender: 'assistant' },\n            { text: fetchInstruction, sender: 'assistant' }\n          ];\n          setMessages(prevMessages => [...prevMessages, ...botMessages]);\n        }\n\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n\n      e.target.message.value = '';\n    }\n  };\n\n  const setReminder = (reminderMessage) => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n\n      const timeout = reminderTime - now;\n\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n\n  const addTodoTask = async (task) => {\n    try {\n      const response = await axios.post('http://localhost:8080/todos', { task });\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const removeTodoTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n\n  const toggleTodoCompletion = async (taskId) => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        await axios.put(`http://localhost:8080/todos/${taskId}`, updatedTodo);\n        setTodos(todos.map(todo => (todo.id === taskId ? updatedTodo : todo)));\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Scroll chat to bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Function to update robot's eyes position\n  const updateRobotEyes = (e) => {\n    const mouseX = e.pageX;\n    const mouseY = e.pageY;\n    const eye1 = robotEyesRef.current[0];\n    const eye2 = robotEyesRef.current[1];\n\n    if (eye1 && eye2) {\n      const eyeSize = 12; // Adjust based on eye size\n      const eyeCenterX = eye1.getBoundingClientRect().left + eyeSize / 2;\n      const eyeCenterY = eye1.getBoundingClientRect().top + eyeSize / 2;\n\n      const deltaX1 = mouseX - eyeCenterX;\n      const deltaY1 = mouseY - eyeCenterY;\n      const distance1 = Math.sqrt(deltaX1 * deltaX1 + deltaY1 * deltaY1);\n\n      const deltaX2 = mouseX - (eye2.getBoundingClientRect().left + eyeSize / 2);\n      const deltaY2 = mouseY - (eye2.getBoundingClientRect().top + eyeSize / 2);\n      const distance2 = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\n\n      const maxEyeMove = 3; // Adjust eye movement sensitivity\n\n      eye1.style.transform = `translate(${deltaX1 / distance1 * maxEyeMove}px, ${deltaY1 / distance1 * maxEyeMove}px)`;\n      eye2.style.transform = `translate(${deltaX2 / distance2 * maxEyeMove}px, ${deltaY2 / distance2 * maxEyeMove}px)`;\n    }\n  };\n\n  useEffect(() => {\n    // Add mousemove event listener to update robot's eyes position\n    document.addEventListener('mousemove', updateRobotEyes);\n\n    return () => {\n      // Clean up event listener on component unmount\n      document.removeEventListener('mousemove', updateRobotEyes);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n       <div className=\"robot-face\" style={{ top: '10px', right: '10px' }}>\n        <div className=\"eye\" ref={el => robotEyesRef.current[0] = el}></div>\n        <div className=\"eye\" style={{ left: '50%' }} ref={el => robotEyesRef.current[1] = el}></div>\n        <div className=\"mouth\"></div>\n      </div>\n      <h1>Amute</h1>\n      <div className=\"chat-container\" ref={chatContainerRef}>\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={handleSendMessage}>\n          <input type=\"text\" name=\"message\" className=\"message-input\" placeholder=\"Type your message...\" />\n          <button type=\"submit\" className=\"send-button\">Send</button>\n        </form>\n        {showTodos && (\n          <div className=\"todo-list\">\n            <h2>Your To-Do List</h2>\n            <ul>\n              {todos.map(todo => (\n                <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n                  <span onClick={() => toggleTodoCompletion(todo.id)}>{todo.task}</span>\n                  <button onClick={() => removeTodoTask(todo.id)}>Remove</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n           {notes.length > 0 && (\n        <div>\n          <h2>Notes</h2>\n          <ul>\n            {notes.map(note => (\n              <li key={note.id}>{note.note}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAe,gBAAgB,CAAGb,MAAM,CAAC,IAAI,CAAC,CACrC,KAAM,CAAAc,YAAY,CAAGd,MAAM,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CAAE;AAC3C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAmB,iBAAiB,CAAGjB,MAAM,CAAC,EAAE,CAAC,CAIpCD,SAAS,CAAC,IAAM,CACdmB,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAlB,KAAK,CAACmB,GAAG,CAAC,6BAA6B,CAAC,CAC/DV,QAAQ,CAACS,QAAQ,CAACE,IAAI,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACrCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,UAAU,CAAGF,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,CACzC,GAAIH,UAAU,CAACI,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC5B,KAAM,CAAAC,WAAW,CAAG,CAAEC,IAAI,CAAEN,UAAU,CAAEO,MAAM,CAAE,MAAO,CAAC,CACxD1B,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEyB,WAAW,CAAC,CAAC,CAEvC,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAlB,KAAK,CAACkC,IAAI,CAAC,oCAAoC,CAAE,CACtEN,OAAO,CAAEF,UACX,CAAC,CAAC,CAEF,KAAM,CAAAS,UAAU,CAAG,CAAEH,IAAI,CAAEd,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAAEK,MAAM,CAAE,WAAY,CAAC,CACvE1B,WAAW,CAAC6B,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAED,UAAU,CAAC,CAAC,CAE1D,GAAIjB,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACS,UAAU,CAAC,SAAS,CAAC,CAAE,CAC/C,KAAM,CAAAC,OAAO,CAAGpB,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACW,SAAS,CAAC,CAAC,CAAC,CAACT,IAAI,CAAC,CAAC,CACzDU,MAAM,CAACC,IAAI,CAACH,OAAO,CAAE,QAAQ,CAAC,CAChC,CAEA,GAAIpB,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACS,UAAU,CAAC,eAAe,CAAC,CAAE,CACrD,KAAM,CAAAK,eAAe,CAAGxB,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACW,SAAS,CAAC,EAAE,CAAC,CAACT,IAAI,CAAC,CAAC,CAClEa,WAAW,CAACD,eAAe,CAAC,CAC9B,CAEA,GAAIxB,QAAQ,CAACE,IAAI,CAACQ,OAAO,GAAK,wBAAwB,CAAE,CACtDgB,gBAAgB,CAAC,CAAC,CACpB,CAEA,GAAI1B,QAAQ,CAACE,IAAI,CAACQ,OAAO,GAAK,6BAA6B,CAAE,CAC3DjB,YAAY,CAAC,IAAI,CAAC,CACpB,CAEA,GAAIO,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACS,UAAU,CAAC,4BAA4B,CAAC,CAAE,CAClE,KAAM,CAAAQ,IAAI,CAAG3B,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACW,SAAS,CAAC,EAAE,CAAC,CAACT,IAAI,CAAC,CAAC,CACvDgB,WAAW,CAACD,IAAI,CAAC,CACnB,CAEA,GAAI3B,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACS,UAAU,CAAC,6CAA6C,CAAC,CAAE,CACnF,KAAM,CAAAU,MAAM,CAAG7B,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACW,SAAS,CAAC,EAAE,CAAC,CAACT,IAAI,CAAC,CAAC,CACzDkB,cAAc,CAACD,MAAM,CAAC,CACxB,CACA,GAAI7B,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAACS,UAAU,CAAC,aAAa,CAAC,CAAE,CACnD,KAAM,CAAAY,MAAM,CAAG/B,QAAQ,CAACE,IAAI,CAAC6B,MAAM,CACnC,KAAM,CAAAC,mBAAmB,yBAAAC,MAAA,CAA2BF,MAAM,KAAG,CAC7D,KAAM,CAAAG,gBAAgB,6CAAAD,MAAA,CAA+CF,MAAM,MAAI,CAC/E,KAAM,CAAAI,WAAW,CAAG,CAClB,CAAErB,IAAI,CAAEkB,mBAAmB,CAAEjB,MAAM,CAAE,WAAY,CAAC,CAClD,CAAED,IAAI,CAAEoB,gBAAgB,CAAEnB,MAAM,CAAE,WAAY,CAAC,CAChD,CACD1B,WAAW,CAAC6B,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAE,GAAGiB,WAAW,CAAC,CAAC,CAChE,CAEF,CAAE,MAAOhC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CAEAG,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,CAAG,EAAE,CAC7B,CACF,CAAC,CAED,KAAM,CAAAc,WAAW,CAAID,eAAe,EAAK,CACvC,GAAIA,eAAe,CAACY,QAAQ,CAAC,OAAO,CAAC,CAAE,CACrC,KAAM,CAACT,IAAI,CAAEU,QAAQ,CAAC,CAAGb,eAAe,CAACc,KAAK,CAAC,SAAS,CAAC,CACzD,KAAM,CAAAC,eAAe,CAAGC,QAAQ,CAACH,QAAQ,CAAE,EAAE,CAAC,CAE9C,GAAI,CAACI,KAAK,CAACF,eAAe,CAAC,CAAE,CAC3B,KAAM,CAAAG,UAAU,CAAGC,WAAW,CAAC,IAAM,CACnCC,KAAK,cAAAX,MAAA,CAAcN,IAAI,CAAE,CAAC,CAC5B,CAAC,CAAEY,eAAe,CAAG,EAAE,CAAG,IAAI,CAAC,CAC/BzC,iBAAiB,CAAC+C,OAAO,CAACC,IAAI,CAACJ,UAAU,CAAC,CAC5C,CACF,CAAC,IAAM,CACL,KAAM,CAACf,IAAI,CAAEoB,IAAI,CAAC,CAAGvB,eAAe,CAACc,KAAK,CAAC,MAAM,CAAC,CAClD,KAAM,CAAAU,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAD,IAAI,CAACD,GAAG,CAACG,YAAY,CAAC,CAAC,CAAG,GAAG,CAAGJ,IAAI,CAAC,CAE9D,GAAIG,YAAY,CAAGF,GAAG,CAAE,CACtBE,YAAY,CAACE,OAAO,CAACF,YAAY,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAClD,CAEA,KAAM,CAAAC,OAAO,CAAGJ,YAAY,CAAGF,GAAG,CAElCO,UAAU,CAAC,IAAM,CACfX,KAAK,cAAAX,MAAA,CAAcN,IAAI,CAAE,CAAC,CAC5B,CAAC,CAAE2B,OAAO,CAAC,CACb,CACF,CAAC,CAED,KAAM,CAAA5B,gBAAgB,CAAGA,CAAA,GAAM,CAC7B5B,iBAAiB,CAAC+C,OAAO,CAACW,OAAO,CAACd,UAAU,EAAIe,aAAa,CAACf,UAAU,CAAC,CAAC,CAC1E5C,iBAAiB,CAAC+C,OAAO,CAAG,EAAE,CAChC,CAAC,CAED,KAAM,CAAAjB,WAAW,CAAG,KAAO,CAAAD,IAAI,EAAK,CAClC,GAAI,CACF,KAAM,CAAA3B,QAAQ,CAAG,KAAM,CAAAlB,KAAK,CAACkC,IAAI,CAAC,6BAA6B,CAAE,CAAEW,IAAK,CAAC,CAAC,CAC1EpC,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEU,QAAQ,CAACE,IAAI,CAAC,CAAC,CACrC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAED,KAAM,CAAA2B,cAAc,CAAG,KAAO,CAAAD,MAAM,EAAK,CACvC,GAAI,CACF,KAAM,CAAA/C,KAAK,CAAC4E,MAAM,gCAAAzB,MAAA,CAAgCJ,MAAM,CAAE,CAAC,CAC3DtC,QAAQ,CAACD,KAAK,CAACqE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKrB,QAAQ,CAACX,MAAM,CAAE,EAAE,CAAC,CAAC,CAAC,CAClE,CAAE,MAAO1B,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAED,KAAM,CAAA2D,oBAAoB,CAAG,KAAO,CAAAjC,MAAM,EAAK,CAC7C,KAAM,CAAA+B,IAAI,CAAGtE,KAAK,CAACyE,IAAI,CAACH,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKhC,MAAM,CAAC,CACnD,GAAI+B,IAAI,CAAE,CACR,GAAI,CACF,KAAM,CAAAI,WAAW,CAAG,CAAE,GAAGJ,IAAI,CAAEK,SAAS,CAAE,CAACL,IAAI,CAACK,SAAU,CAAC,CAC3D,KAAM,CAAAnF,KAAK,CAACoF,GAAG,gCAAAjC,MAAA,CAAgCJ,MAAM,EAAImC,WAAW,CAAC,CACrEzE,QAAQ,CAACD,KAAK,CAAC6E,GAAG,CAACP,IAAI,EAAKA,IAAI,CAACC,EAAE,GAAKhC,MAAM,CAAGmC,WAAW,CAAGJ,IAAK,CAAC,CAAC,CACxE,CAAE,MAAOzD,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CACF,CAAC,CAEDvB,SAAS,CAAC,IAAM,CACd;AACA,GAAIc,gBAAgB,CAACmD,OAAO,CAAE,CAC5BnD,gBAAgB,CAACmD,OAAO,CAACuB,SAAS,CAAG1E,gBAAgB,CAACmD,OAAO,CAACwB,YAAY,CAC5E,CACF,CAAC,CAAE,CAACjF,QAAQ,CAAC,CAAC,CAEd;AACA,KAAM,CAAAkF,eAAe,CAAIhE,CAAC,EAAK,CAC7B,KAAM,CAAAiE,MAAM,CAAGjE,CAAC,CAACkE,KAAK,CACtB,KAAM,CAAAC,MAAM,CAAGnE,CAAC,CAACoE,KAAK,CACtB,KAAM,CAAAC,IAAI,CAAGhF,YAAY,CAACkD,OAAO,CAAC,CAAC,CAAC,CACpC,KAAM,CAAA+B,IAAI,CAAGjF,YAAY,CAACkD,OAAO,CAAC,CAAC,CAAC,CAEpC,GAAI8B,IAAI,EAAIC,IAAI,CAAE,CAChB,KAAM,CAAAC,OAAO,CAAG,EAAE,CAAE;AACpB,KAAM,CAAAC,UAAU,CAAGH,IAAI,CAACI,qBAAqB,CAAC,CAAC,CAACC,IAAI,CAAGH,OAAO,CAAG,CAAC,CAClE,KAAM,CAAAI,UAAU,CAAGN,IAAI,CAACI,qBAAqB,CAAC,CAAC,CAACG,GAAG,CAAGL,OAAO,CAAG,CAAC,CAEjE,KAAM,CAAAM,OAAO,CAAGZ,MAAM,CAAGO,UAAU,CACnC,KAAM,CAAAM,OAAO,CAAGX,MAAM,CAAGQ,UAAU,CACnC,KAAM,CAAAI,SAAS,CAAGC,IAAI,CAACC,IAAI,CAACJ,OAAO,CAAGA,OAAO,CAAGC,OAAO,CAAGA,OAAO,CAAC,CAElE,KAAM,CAAAI,OAAO,CAAGjB,MAAM,EAAIK,IAAI,CAACG,qBAAqB,CAAC,CAAC,CAACC,IAAI,CAAGH,OAAO,CAAG,CAAC,CAAC,CAC1E,KAAM,CAAAY,OAAO,CAAGhB,MAAM,EAAIG,IAAI,CAACG,qBAAqB,CAAC,CAAC,CAACG,GAAG,CAAGL,OAAO,CAAG,CAAC,CAAC,CACzE,KAAM,CAAAa,SAAS,CAAGJ,IAAI,CAACC,IAAI,CAACC,OAAO,CAAGA,OAAO,CAAGC,OAAO,CAAGA,OAAO,CAAC,CAElE,KAAM,CAAAE,UAAU,CAAG,CAAC,CAAE;AAEtBhB,IAAI,CAACiB,KAAK,CAACC,SAAS,cAAA5D,MAAA,CAAgBkD,OAAO,CAAGE,SAAS,CAAGM,UAAU,SAAA1D,MAAA,CAAOmD,OAAO,CAAGC,SAAS,CAAGM,UAAU,OAAK,CAChHf,IAAI,CAACgB,KAAK,CAACC,SAAS,cAAA5D,MAAA,CAAgBuD,OAAO,CAAGE,SAAS,CAAGC,UAAU,SAAA1D,MAAA,CAAOwD,OAAO,CAAGC,SAAS,CAAGC,UAAU,OAAK,CAClH,CACF,CAAC,CAED/G,SAAS,CAAC,IAAM,CACd;AACAkH,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAEzB,eAAe,CAAC,CAEvD,MAAO,IAAM,CACX;AACAwB,QAAQ,CAACE,mBAAmB,CAAC,WAAW,CAAE1B,eAAe,CAAC,CAC5D,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEpF,KAAA,QAAK+G,SAAS,CAAC,KAAK,CAAAC,QAAA,eACjBhH,KAAA,QAAK+G,SAAS,CAAC,YAAY,CAACL,KAAK,CAAE,CAAEV,GAAG,CAAE,MAAM,CAAEiB,KAAK,CAAE,MAAO,CAAE,CAAAD,QAAA,eACjElH,IAAA,QAAKiH,SAAS,CAAC,KAAK,CAACG,GAAG,CAAEC,EAAE,EAAI1G,YAAY,CAACkD,OAAO,CAAC,CAAC,CAAC,CAAGwD,EAAG,CAAM,CAAC,cACpErH,IAAA,QAAKiH,SAAS,CAAC,KAAK,CAACL,KAAK,CAAE,CAAEZ,IAAI,CAAE,KAAM,CAAE,CAACoB,GAAG,CAAEC,EAAE,EAAI1G,YAAY,CAACkD,OAAO,CAAC,CAAC,CAAC,CAAGwD,EAAG,CAAM,CAAC,cAC5FrH,IAAA,QAAKiH,SAAS,CAAC,OAAO,CAAM,CAAC,EAC1B,CAAC,cACNjH,IAAA,OAAAkH,QAAA,CAAI,OAAK,CAAI,CAAC,cACdhH,KAAA,QAAK+G,SAAS,CAAC,gBAAgB,CAACG,GAAG,CAAE1G,gBAAiB,CAAAwG,QAAA,eACpDlH,IAAA,QAAKiH,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3B9G,QAAQ,CAAC+E,GAAG,CAAC,CAACzD,OAAO,CAAE4F,KAAK,gBAC3BtH,IAAA,QAAiBiH,SAAS,YAAAhE,MAAA,CAAavB,OAAO,CAACK,MAAM,CAAG,CAAAmF,QAAA,CACrDxF,OAAO,CAACI,IAAI,EADLwF,KAEL,CACN,CAAC,CACC,CAAC,cACNpH,KAAA,SAAMqH,QAAQ,CAAElG,iBAAkB,CAAA6F,QAAA,eAChClH,IAAA,UAAOwH,IAAI,CAAC,MAAM,CAACC,IAAI,CAAC,SAAS,CAACR,SAAS,CAAC,eAAe,CAACS,WAAW,CAAC,sBAAsB,CAAE,CAAC,cACjG1H,IAAA,WAAQwH,IAAI,CAAC,QAAQ,CAACP,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,MAAI,CAAQ,CAAC,EACvD,CAAC,CACN1G,SAAS,eACRN,KAAA,QAAK+G,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBlH,IAAA,OAAAkH,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBlH,IAAA,OAAAkH,QAAA,CACG5G,KAAK,CAAC6E,GAAG,CAACP,IAAI,eACb1E,KAAA,OAAkB+G,SAAS,CAAErC,IAAI,CAACK,SAAS,CAAG,WAAW,CAAG,EAAG,CAAAiC,QAAA,eAC7DlH,IAAA,SAAM2H,OAAO,CAAEA,CAAA,GAAM7C,oBAAoB,CAACF,IAAI,CAACC,EAAE,CAAE,CAAAqC,QAAA,CAAEtC,IAAI,CAACjC,IAAI,CAAO,CAAC,cACtE3C,IAAA,WAAQ2H,OAAO,CAAEA,CAAA,GAAM7E,cAAc,CAAC8B,IAAI,CAACC,EAAE,CAAE,CAAAqC,QAAA,CAAC,QAAM,CAAQ,CAAC,GAFxDtC,IAAI,CAACC,EAGV,CACL,CAAC,CACA,CAAC,EACF,CACN,CACGjE,KAAK,CAACgH,MAAM,CAAG,CAAC,eACpB1H,KAAA,QAAAgH,QAAA,eACElH,IAAA,OAAAkH,QAAA,CAAI,OAAK,CAAI,CAAC,cACdlH,IAAA,OAAAkH,QAAA,CACGtG,KAAK,CAACuE,GAAG,CAAC0C,IAAI,eACb7H,IAAA,OAAAkH,QAAA,CAAmBW,IAAI,CAACA,IAAI,EAAnBA,IAAI,CAAChD,EAAmB,CAClC,CAAC,CACA,CAAC,EACF,CACN,EACI,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1E,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}