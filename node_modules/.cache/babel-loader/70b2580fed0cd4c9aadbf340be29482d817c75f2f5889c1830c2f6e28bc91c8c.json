{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\my-chrome-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your CSS styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const robotEyesRef = useRef([null, null]); // Ref for robot's eyes\n  const reminderIntervals = useRef([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = {\n        text: newMessage,\n        sender: 'user'\n      };\n      setMessages([...messages, userMessage]);\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n        const botMessage = {\n          text: response.data.message,\n          sender: 'assistant'\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n        handleResponseActions(response.data.message);\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setMessages(prevMessages => [...prevMessages, {\n          text: 'Error sending message',\n          sender: 'assistant'\n        }]);\n      }\n      e.target.message.value = '';\n    }\n  };\n  const handleResponseActions = message => {\n    if (message.startsWith('Opening')) {\n      const siteUrl = message.substring(8).trim();\n      window.open(siteUrl, '_blank');\n    } else if (message.startsWith('Reminder set:')) {\n      const reminderMessage = message.substring(14).trim();\n      setReminder(reminderMessage);\n    } else if (message === 'All reminders stopped.') {\n      stopAllReminders();\n    } else if (message === 'Fetching your to-do list...') {\n      setShowTodos(true);\n    } else if (message.startsWith('Adding to your to-do list:')) {\n      const task = message.substring(25).trim();\n      addTodoTask(task);\n    } else if (message.startsWith('Removing item from your to-do list with ID:')) {\n      const taskId = message.substring(42).trim();\n      removeTodoTask(taskId);\n    }\n  };\n  const setReminder = reminderMessage => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n      const timeout = reminderTime - now;\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n  const addTodoTask = async task => {\n    try {\n      const response = await axios.post('http://localhost:8080/todos', {\n        task\n      });\n      setTodos(prevTodos => [...prevTodos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  const removeTodoTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(prevTodos => prevTodos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n  const toggleTodoCompletion = async taskId => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        await axios.put(`http://localhost:8080/todos/${taskId}`, updatedTodo);\n        setTodos(prevTodos => prevTodos.map(todo => todo.id === taskId ? updatedTodo : todo));\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    // Scroll chat to bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  useEffect(() => {\n    // Function to update robot's eyes position\n    const updateRobotEyes = e => {\n      const mouseX = e.pageX;\n      const mouseY = e.pageY;\n      const eye1 = robotEyesRef.current[0];\n      const eye2 = robotEyesRef.current[1];\n      if (eye1 && eye2) {\n        const eyeSize = 10; // Adjust based on eye size\n        const eyeCenterX1 = eye1.getBoundingClientRect().left + eyeSize / 2;\n        const eyeCenterY1 = eye1.getBoundingClientRect().top + eyeSize / 2;\n        const eyeCenterX2 = eye2.getBoundingClientRect().left + eyeSize / 2;\n        const eyeCenterY2 = eye2.getBoundingClientRect().top + eyeSize / 2;\n        const deltaX1 = mouseX - eyeCenterX1;\n        const deltaY1 = mouseY - eyeCenterY1;\n        const distance1 = Math.sqrt(deltaX1 * deltaX1 + deltaY1 * deltaY1);\n        const deltaX2 = mouseX - eyeCenterX2;\n        const deltaY2 = mouseY - eyeCenterY2;\n        const distance2 = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\n        const maxEyeMove = 3; // Adjust eye movement sensitivity\n\n        eye1.style.transform = `translate(${deltaX1 / distance1 * maxEyeMove}px, ${deltaY1 / distance1 * maxEyeMove}px)`;\n        eye2.style.transform = `translate(${deltaX2 / distance2 * maxEyeMove}px, ${deltaY2 / distance2 * maxEyeMove}px)`;\n      }\n    };\n\n    // Add mousemove event listener to update robot's eyes position\n    document.addEventListener('mousemove', updateRobotEyes);\n    return () => {\n      // Clean up event listener on component unmount\n      document.removeEventListener('mousemove', updateRobotEyes);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"robot-face\",\n      style: {\n        top: '10px',\n        right: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eye\",\n        ref: el => robotEyesRef.current[0] = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eye\",\n        style: {\n          left: '50%'\n        },\n        ref: el => robotEyesRef.current[1] = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mouth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Amute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          className: \"message-input\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), showTodos && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: todo.completed ? 'completed' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => toggleTodoCompletion(todo.id),\n              children: todo.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeTodoTask(todo.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H33tCKAei0rlVjvXkDJyZPXwm2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","todos","setTodos","showTodos","setShowTodos","chatContainerRef","robotEyesRef","reminderIntervals","fetchTodos","response","get","data","error","console","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","post","botMessage","prevMessages","handleResponseActions","startsWith","siteUrl","substring","window","open","reminderMessage","setReminder","stopAllReminders","task","addTodoTask","taskId","removeTodoTask","includes","interval","split","intervalMinutes","parseInt","isNaN","intervalId","setInterval","alert","current","push","time","now","Date","reminderTime","toDateString","setDate","getDate","timeout","setTimeout","forEach","clearInterval","prevTodos","delete","filter","todo","id","toggleTodoCompletion","find","updatedTodo","completed","put","map","scrollTop","scrollHeight","updateRobotEyes","mouseX","pageX","mouseY","pageY","eye1","eye2","eyeSize","eyeCenterX1","getBoundingClientRect","left","eyeCenterY1","top","eyeCenterX2","eyeCenterY2","deltaX1","deltaY1","distance1","Math","sqrt","deltaX2","deltaY2","distance2","maxEyeMove","style","transform","document","addEventListener","removeEventListener","className","children","right","ref","el","fileName","_jsxFileName","lineNumber","columnNumber","index","onSubmit","type","name","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your CSS styles\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const robotEyesRef = useRef([null, null]); // Ref for robot's eyes\n  const reminderIntervals = useRef([]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n\n        const botMessage = { text: response.data.message, sender: 'assistant' };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n\n        handleResponseActions(response.data.message);\n\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setMessages(prevMessages => [...prevMessages, { text: 'Error sending message', sender: 'assistant' }]);\n      }\n\n      e.target.message.value = '';\n    }\n  };\n\n  const handleResponseActions = (message) => {\n    if (message.startsWith('Opening')) {\n      const siteUrl = message.substring(8).trim();\n      window.open(siteUrl, '_blank');\n    } else if (message.startsWith('Reminder set:')) {\n      const reminderMessage = message.substring(14).trim();\n      setReminder(reminderMessage);\n    } else if (message === 'All reminders stopped.') {\n      stopAllReminders();\n    } else if (message === 'Fetching your to-do list...') {\n      setShowTodos(true);\n    } else if (message.startsWith('Adding to your to-do list:')) {\n      const task = message.substring(25).trim();\n      addTodoTask(task);\n    } else if (message.startsWith('Removing item from your to-do list with ID:')) {\n      const taskId = message.substring(42).trim();\n      removeTodoTask(taskId);\n    }\n  };\n\n  const setReminder = (reminderMessage) => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n\n      const timeout = reminderTime - now;\n\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n\n  const addTodoTask = async (task) => {\n    try {\n      const response = await axios.post('http://localhost:8080/todos', { task });\n      setTodos(prevTodos => [...prevTodos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const removeTodoTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(prevTodos => prevTodos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n\n  const toggleTodoCompletion = async (taskId) => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        await axios.put(`http://localhost:8080/todos/${taskId}`, updatedTodo);\n        setTodos(prevTodos =>\n          prevTodos.map(todo =>\n            todo.id === taskId ? updatedTodo : todo\n          )\n        );\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Scroll chat to bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    // Function to update robot's eyes position\n    const updateRobotEyes = (e) => {\n      const mouseX = e.pageX;\n      const mouseY = e.pageY;\n      const eye1 = robotEyesRef.current[0];\n      const eye2 = robotEyesRef.current[1];\n\n      if (eye1 && eye2) {\n        const eyeSize = 10; // Adjust based on eye size\n        const eyeCenterX1 = eye1.getBoundingClientRect().left + eyeSize / 2;\n        const eyeCenterY1 = eye1.getBoundingClientRect().top + eyeSize / 2;\n        const eyeCenterX2 = eye2.getBoundingClientRect().left + eyeSize / 2;\n        const eyeCenterY2 = eye2.getBoundingClientRect().top + eyeSize / 2;\n\n        const deltaX1 = mouseX - eyeCenterX1;\n        const deltaY1 = mouseY - eyeCenterY1;\n        const distance1 = Math.sqrt(deltaX1 * deltaX1 + deltaY1 * deltaY1);\n\n        const deltaX2 = mouseX - eyeCenterX2;\n        const deltaY2 = mouseY - eyeCenterY2;\n        const distance2 = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\n\n        const maxEyeMove = 3; // Adjust eye movement sensitivity\n\n        eye1.style.transform = `translate(${(deltaX1 / distance1) * maxEyeMove}px, ${(deltaY1 / distance1) * maxEyeMove}px)`;\n        eye2.style.transform = `translate(${(deltaX2 / distance2) * maxEyeMove}px, ${(deltaY2 / distance2) * maxEyeMove}px)`;\n      }\n    };\n\n    // Add mousemove event listener to update robot's eyes position\n    document.addEventListener('mousemove', updateRobotEyes);\n\n    return () => {\n      // Clean up event listener on component unmount\n      document.removeEventListener('mousemove', updateRobotEyes);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"robot-face\" style={{ top: '10px', right: '10px' }}>\n        <div className=\"eye\" ref={el => robotEyesRef.current[0] = el}></div>\n        <div className=\"eye\" style={{ left: '50%' }} ref={el => robotEyesRef.current[1] = el}></div>\n        <div className=\"mouth\"></div>\n      </div>\n      <h1>Amute</h1>\n      <div className=\"chat-container\" ref={chatContainerRef}>\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={handleSendMessage}>\n          <input type=\"text\" name=\"message\" className=\"message-input\" placeholder=\"Type your message...\" />\n          <button type=\"submit\" className=\"send-button\">Send</button>\n        </form>\n        {showTodos && (\n          <div className=\"todo-list\">\n            <h2>Your To-Do List</h2>\n            <ul>\n              {todos.map(todo => (\n                <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n                  <span onClick={() => toggleTodoCompletion(todo.id)}>{todo.task}</span>\n                  <button onClick={() => removeTodoTask(todo.id)}>Remove</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}