{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\my-chrome-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Include your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      // Add user message to state for immediate UI update\n      const userMessage = {\n        text: newMessage,\n        sender: 'user'\n      };\n      setMessages([...messages, userMessage]);\n      try {\n        let responseMessage = '';\n\n        // Check if user message is a greeting\n        if (isGreeting(newMessage)) {\n          responseMessage = getGreetingResponse(newMessage);\n        }\n        // Check if user message is to open a website\n        else if (isWebsiteCommand(newMessage)) {\n          const url = extractURL(newMessage);\n          responseMessage = `Opening ${url}...`;\n\n          // Open website in new tab\n          window.open(`http://${url}`, '_blank');\n        } else {\n          // Send message to backend if not a direct command or greeting\n          const response = await axios.post('http://localhost:8080/send-message', {\n            message: newMessage\n          });\n          responseMessage = response.data.message;\n        }\n\n        // Add bot response to state after handling message\n        const botMessage = {\n          text: responseMessage,\n          sender: 'assistant'\n        };\n        setMessages([...messages, botMessage]);\n\n        // Optionally handle response from backend\n        console.log('Message sent successfully:', responseMessage);\n      } catch (error) {\n        console.error('Error sending message:', error);\n        // Handle error (e.g., show error message to user)\n      }\n\n      // Clear input field after sending message\n      e.target.message.value = '';\n    }\n  };\n\n  // Function to check if message is a greeting\n  const isGreeting = message => {\n    const lowerCaseMessage = message.toLowerCase();\n    const greetings = ['hi', 'hello', 'hey', 'howdy']; // Add more greetings as needed\n    return greetings.some(greeting => lowerCaseMessage.includes(greeting));\n  };\n\n  // Function to check if message is to open a website\n  const isWebsiteCommand = message => {\n    const lowerCaseMessage = message.toLowerCase();\n    return lowerCaseMessage.startsWith('open ') && lowerCaseMessage.split(' ').length > 1;\n  };\n\n  // Function to extract URL from open command\n  const extractURL = message => {\n    const lowerCaseMessage = message.toLowerCase();\n    const parts = lowerCaseMessage.split(' ');\n    return parts[1];\n  };\n\n  // Function to generate response for different greetings\n  const getGreetingResponse = message => {\n    const lowerCaseMessage = message.toLowerCase();\n    if (lowerCaseMessage.includes('hi')) {\n      return `Hi there! How can I assist you today?`;\n    } else if (lowerCaseMessage.includes('hello')) {\n      return `Hello! How can I help you?`;\n    } else if (lowerCaseMessage.includes('hey')) {\n      return `Hey! What can I do for you?`;\n    } else {\n      return `Howdy! What's on your mind?`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chrome Extension Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","responseMessage","isGreeting","getGreetingResponse","isWebsiteCommand","url","extractURL","window","open","response","post","data","botMessage","console","log","error","lowerCaseMessage","toLowerCase","greetings","some","greeting","includes","startsWith","split","length","parts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","type","name","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Include your CSS file for styling\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      // Add user message to state for immediate UI update\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        let responseMessage = '';\n\n        // Check if user message is a greeting\n        if (isGreeting(newMessage)) {\n          responseMessage = getGreetingResponse(newMessage);\n        }\n        // Check if user message is to open a website\n        else if (isWebsiteCommand(newMessage)) {\n          const url = extractURL(newMessage);\n          responseMessage = `Opening ${url}...`;\n\n          // Open website in new tab\n          window.open(`http://${url}`, '_blank');\n        } else {\n          // Send message to backend if not a direct command or greeting\n          const response = await axios.post('http://localhost:8080/send-message', {\n            message: newMessage\n          });\n          responseMessage = response.data.message;\n        }\n\n        // Add bot response to state after handling message\n        const botMessage = { text: responseMessage, sender: 'assistant' };\n        setMessages([...messages, botMessage]);\n\n        // Optionally handle response from backend\n        console.log('Message sent successfully:', responseMessage);\n\n      } catch (error) {\n        console.error('Error sending message:', error);\n        // Handle error (e.g., show error message to user)\n      }\n\n      // Clear input field after sending message\n      e.target.message.value = '';\n    }\n  };\n\n  // Function to check if message is a greeting\n  const isGreeting = (message) => {\n    const lowerCaseMessage = message.toLowerCase();\n    const greetings = ['hi', 'hello', 'hey', 'howdy']; // Add more greetings as needed\n    return greetings.some(greeting => lowerCaseMessage.includes(greeting));\n  };\n\n  // Function to check if message is to open a website\n  const isWebsiteCommand = (message) => {\n    const lowerCaseMessage = message.toLowerCase();\n    return lowerCaseMessage.startsWith('open ') && lowerCaseMessage.split(' ').length > 1;\n  };\n\n  // Function to extract URL from open command\n  const extractURL = (message) => {\n    const lowerCaseMessage = message.toLowerCase();\n    const parts = lowerCaseMessage.split(' ');\n    return parts[1];\n  };\n\n  // Function to generate response for different greetings\n  const getGreetingResponse = (message) => {\n    const lowerCaseMessage = message.toLowerCase();\n    if (lowerCaseMessage.includes('hi')) {\n      return `Hi there! How can I assist you today?`;\n    } else if (lowerCaseMessage.includes('hello')) {\n      return `Hello! How can I help you?`;\n    } else if (lowerCaseMessage.includes('hey')) {\n      return `Hey! What can I do for you?`;\n    } else {\n      return `Howdy! What's on your mind?`;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chrome Extension Assistant</h1>\n      <div className=\"chat-container\">\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={handleSendMessage}>\n          <input type=\"text\" name=\"message\" placeholder=\"Type your message...\" />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}