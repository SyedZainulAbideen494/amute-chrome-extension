{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\my-chrome-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your CSS styles\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const robotEyesRef = useRef([null, null]); // Ref for robot's eyes\n  const [notes, setNotes] = useState([]);\n  const reminderIntervals = useRef([]);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  useEffect(() => {\n    fetchTodos();\n    initSpotify();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const initSpotify = async () => {\n    // Fetch Spotify access token (replace with your method to get token)\n    const token = await fetchSpotifyToken();\n    setSpotifyToken(token);\n\n    // Set Spotify access token for the Spotify Web API library\n    spotifyApi.setAccessToken(token);\n  };\n  const fetchSpotifyToken = async () => {\n    try {\n      // Replace 'your-auth-endpoint' with your actual backend endpoint URL\n      const response = await axios.get('http://localhost:8080/auth/spotify/token');\n      return response.data.access_token; // Assuming your endpoint returns an access token\n    } catch (error) {\n      console.error('Error fetching Spotify token:', error);\n      // Handle error fetching token (e.g., redirect to login, show error message)\n      // Throw an error or return a default/fallback token as needed\n      throw new Error('Failed to fetch Spotify access token');\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = {\n        text: newMessage,\n        sender: 'user'\n      };\n      setMessages([...messages, userMessage]);\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n        const botMessage = {\n          text: response.data.message,\n          sender: 'assistant'\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n        if (response.data.message === 'Fetching your to-do list...') {\n          setShowTodos(true);\n        }\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n        if (response.data.message.startsWith('Play a song by')) {\n          const artist = response.data.message.substring(15).trim();\n          playSongByArtist(artist);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n      e.target.message.value = '';\n    }\n  };\n  const setReminder = reminderMessage => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n      const timeout = reminderTime - now;\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n  const addTodoTask = async task => {\n    try {\n      const response = await axios.post('http://localhost:8080/todos', {\n        task\n      });\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  const removeTodoTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n  const toggleTodoCompletion = async taskId => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        await axios.put(`http://localhost:8080/todos/${taskId}`, updatedTodo);\n        setTodos(todos.map(todo => todo.id === taskId ? updatedTodo : todo));\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    // Scroll chat to bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Function to update robot's eyes position\n  const updateRobotEyes = e => {\n    const mouseX = e.pageX;\n    const mouseY = e.pageY;\n    const eye1 = robotEyesRef.current[0];\n    const eye2 = robotEyesRef.current[1];\n    if (eye1 && eye2) {\n      const eyeSize = 12; // Adjust based on eye size\n      const eyeCenterX = eye1.getBoundingClientRect().left + eyeSize / 2;\n      const eyeCenterY = eye1.getBoundingClientRect().top + eyeSize / 2;\n      const deltaX1 = mouseX - eyeCenterX;\n      const deltaY1 = mouseY - eyeCenterY;\n      const distance1 = Math.sqrt(deltaX1 * deltaX1 + deltaY1 * deltaY1);\n      const deltaX2 = mouseX - (eye2.getBoundingClientRect().left + eyeSize / 2);\n      const deltaY2 = mouseY - (eye2.getBoundingClientRect().top + eyeSize / 2);\n      const distance2 = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\n      const maxEyeMove = 3; // Adjust eye movement sensitivity\n\n      eye1.style.transform = `translate(${deltaX1 / distance1 * maxEyeMove}px, ${deltaY1 / distance1 * maxEyeMove}px)`;\n      eye2.style.transform = `translate(${deltaX2 / distance2 * maxEyeMove}px, ${deltaY2 / distance2 * maxEyeMove}px)`;\n    }\n  };\n  const playSongByArtist = async artist => {\n    try {\n      // Search for tracks by artist\n      const response = await spotifyApi.searchTracks(`artist:${artist}`);\n      if (response.tracks.items.length > 0) {\n        // Get the first track from the search results\n        const track = response.tracks.items[0];\n\n        // Play the track using Spotify Web Playback SDK or redirect to Spotify\n        // Replace 'your-app-client-url' with your actual client URL\n        window.open(track.external_urls.spotify, '_blank');\n      } else {\n        console.error(`No tracks found for artist: ${artist}`);\n      }\n    } catch (error) {\n      console.error('Error playing song:', error);\n    }\n  };\n  useEffect(() => {\n    // Add mousemove event listener to update robot's eyes position\n    document.addEventListener('mousemove', updateRobotEyes);\n    return () => {\n      // Clean up event listener on component unmount\n      document.removeEventListener('mousemove', updateRobotEyes);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"robot-face\",\n      style: {\n        top: '10px',\n        right: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eye\",\n        ref: el => robotEyesRef.current[0] = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eye\",\n        style: {\n          left: '50%'\n        },\n        ref: el => robotEyesRef.current[1] = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mouth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Amute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          className: \"message-input\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), showTodos && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: todo.completed ? 'completed' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => toggleTodoCompletion(todo.id),\n              children: todo.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeTodoTask(todo.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"N1HVeO6BwoGVmG+QYlZ6VfvaXwg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","SpotifyWebApi","jsxDEV","_jsxDEV","spotifyApi","App","_s","messages","setMessages","todos","setTodos","showTodos","setShowTodos","chatContainerRef","robotEyesRef","notes","setNotes","reminderIntervals","spotifyToken","setSpotifyToken","fetchTodos","initSpotify","response","get","data","error","console","token","fetchSpotifyToken","setAccessToken","access_token","Error","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","post","botMessage","prevMessages","startsWith","siteUrl","substring","window","open","reminderMessage","setReminder","stopAllReminders","task","addTodoTask","taskId","removeTodoTask","artist","playSongByArtist","includes","interval","split","intervalMinutes","parseInt","isNaN","intervalId","setInterval","alert","current","push","time","now","Date","reminderTime","toDateString","setDate","getDate","timeout","setTimeout","forEach","clearInterval","delete","filter","todo","id","toggleTodoCompletion","find","updatedTodo","completed","put","map","scrollTop","scrollHeight","updateRobotEyes","mouseX","pageX","mouseY","pageY","eye1","eye2","eyeSize","eyeCenterX","getBoundingClientRect","left","eyeCenterY","top","deltaX1","deltaY1","distance1","Math","sqrt","deltaX2","deltaY2","distance2","maxEyeMove","style","transform","searchTracks","tracks","items","length","track","external_urls","spotify","document","addEventListener","removeEventListener","className","children","right","ref","el","fileName","_jsxFileName","lineNumber","columnNumber","color","index","onSubmit","type","name","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your CSS styles\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const robotEyesRef = useRef([null, null]); // Ref for robot's eyes\n  const [notes, setNotes] = useState([]);\n  const reminderIntervals = useRef([]);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n\n\n  useEffect(() => {\n    fetchTodos();\n    initSpotify();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const initSpotify = async () => {\n    // Fetch Spotify access token (replace with your method to get token)\n    const token = await fetchSpotifyToken();\n    setSpotifyToken(token);\n\n    // Set Spotify access token for the Spotify Web API library\n    spotifyApi.setAccessToken(token);\n  };\n  const fetchSpotifyToken = async () => {\n    try {\n      // Replace 'your-auth-endpoint' with your actual backend endpoint URL\n      const response = await axios.get('http://localhost:8080/auth/spotify/token');\n      return response.data.access_token; // Assuming your endpoint returns an access token\n    } catch (error) {\n      console.error('Error fetching Spotify token:', error);\n      // Handle error fetching token (e.g., redirect to login, show error message)\n      // Throw an error or return a default/fallback token as needed\n      throw new Error('Failed to fetch Spotify access token');\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n\n        const botMessage = { text: response.data.message, sender: 'assistant' };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n\n        if (response.data.message === 'Fetching your to-do list...') {\n          setShowTodos(true);\n        }\n\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n        if (response.data.message.startsWith('Play a song by')) {\n          const artist = response.data.message.substring(15).trim();\n          playSongByArtist(artist);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n\n      e.target.message.value = '';\n    }\n  };\n\n  const setReminder = (reminderMessage) => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n\n      const timeout = reminderTime - now;\n\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n\n  const addTodoTask = async (task) => {\n    try {\n      const response = await axios.post('http://localhost:8080/todos', { task });\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const removeTodoTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n\n  const toggleTodoCompletion = async (taskId) => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        await axios.put(`http://localhost:8080/todos/${taskId}`, updatedTodo);\n        setTodos(todos.map(todo => (todo.id === taskId ? updatedTodo : todo)));\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Scroll chat to bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Function to update robot's eyes position\n  const updateRobotEyes = (e) => {\n    const mouseX = e.pageX;\n    const mouseY = e.pageY;\n    const eye1 = robotEyesRef.current[0];\n    const eye2 = robotEyesRef.current[1];\n\n    if (eye1 && eye2) {\n      const eyeSize = 12; // Adjust based on eye size\n      const eyeCenterX = eye1.getBoundingClientRect().left + eyeSize / 2;\n      const eyeCenterY = eye1.getBoundingClientRect().top + eyeSize / 2;\n\n      const deltaX1 = mouseX - eyeCenterX;\n      const deltaY1 = mouseY - eyeCenterY;\n      const distance1 = Math.sqrt(deltaX1 * deltaX1 + deltaY1 * deltaY1);\n\n      const deltaX2 = mouseX - (eye2.getBoundingClientRect().left + eyeSize / 2);\n      const deltaY2 = mouseY - (eye2.getBoundingClientRect().top + eyeSize / 2);\n      const distance2 = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\n\n      const maxEyeMove = 3; // Adjust eye movement sensitivity\n\n      eye1.style.transform = `translate(${deltaX1 / distance1 * maxEyeMove}px, ${deltaY1 / distance1 * maxEyeMove}px)`;\n      eye2.style.transform = `translate(${deltaX2 / distance2 * maxEyeMove}px, ${deltaY2 / distance2 * maxEyeMove}px)`;\n    }\n  };\n\n  const playSongByArtist = async (artist) => {\n    try {\n      // Search for tracks by artist\n      const response = await spotifyApi.searchTracks(`artist:${artist}`);\n  \n      if (response.tracks.items.length > 0) {\n        // Get the first track from the search results\n        const track = response.tracks.items[0];\n  \n        // Play the track using Spotify Web Playback SDK or redirect to Spotify\n        // Replace 'your-app-client-url' with your actual client URL\n        window.open(track.external_urls.spotify, '_blank');\n      } else {\n        console.error(`No tracks found for artist: ${artist}`);\n      }\n    } catch (error) {\n      console.error('Error playing song:', error);\n    }\n  };\n  useEffect(() => {\n    // Add mousemove event listener to update robot's eyes position\n    document.addEventListener('mousemove', updateRobotEyes);\n\n    return () => {\n      // Clean up event listener on component unmount\n      document.removeEventListener('mousemove', updateRobotEyes);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n       <div className=\"robot-face\" style={{ top: '10px', right: '10px' }}>\n        <div className=\"eye\" ref={el => robotEyesRef.current[0] = el}></div>\n        <div className=\"eye\" style={{ left: '50%' }} ref={el => robotEyesRef.current[1] = el}></div>\n        <div className=\"mouth\"></div>\n      </div>\n      <h1 style={{color: 'white'}}>Amute</h1>\n      <div className=\"chat-container\" ref={chatContainerRef}>\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={handleSendMessage}>\n          <input type=\"text\" name=\"message\" className=\"message-input\" placeholder=\"Type your message...\" />\n          <button type=\"submit\" className=\"send-button\">Send</button>\n        </form>\n        {showTodos && (\n          <div className=\"todo-list\">\n            <h2>Your To-Do List</h2>\n            <ul>\n              {todos.map(todo => (\n                <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n                  <span onClick={() => toggleTodoCompletion(todo.id)}>{todo.task}</span>\n                  <button onClick={() => removeTodoTask(todo.id)}>Remove</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}