{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import axios from'axios';import'./App.css';// Assuming you have your CSS styles in App.css\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[messages,setMessages]=useState([]);const chatContainerRef=useRef(null);const reminderIntervals=useRef([]);const handleSendMessage=async e=>{e.preventDefault();const newMessage=e.target.message.value;if(newMessage.trim()!==''){const userMessage={text:newMessage,sender:'user'};setMessages([...messages,userMessage]);try{const response=await axios.post('http://localhost:8080/send-message',{message:newMessage});const botMessage={text:response.data.message,sender:'assistant'};setMessages(prevMessages=>[...prevMessages,botMessage]);if(response.data.message.startsWith('Opening')){const siteUrl=response.data.message.substring(8).trim();window.open(siteUrl,'_blank');}if(response.data.message.startsWith('Reminder set:')){const reminderMessage=response.data.message.substring(14).trim();setReminder(reminderMessage);}if(response.data.message==='All reminders stopped.'){stopAllReminders();}}catch(error){console.error('Error sending message:',error);}e.target.message.value='';}};const setReminder=reminderMessage=>{if(reminderMessage.includes('every')){const[task,interval]=reminderMessage.split(' every ');const intervalMinutes=parseInt(interval,10);if(!isNaN(intervalMinutes)){const intervalId=setInterval(()=>{alert(\"Reminder: \".concat(task));},intervalMinutes*60*1000);reminderIntervals.current.push(intervalId);}}else{const[task,time]=reminderMessage.split(' at ');const now=new Date();const reminderTime=new Date(now.toDateString()+' '+time);if(reminderTime<now){reminderTime.setDate(reminderTime.getDate()+1);}const timeout=reminderTime-now;setTimeout(()=>{alert(\"Reminder: \".concat(task));},timeout);}};const stopAllReminders=()=>{reminderIntervals.current.forEach(intervalId=>clearInterval(intervalId));reminderIntervals.current=[];};useEffect(()=>{if(chatContainerRef.current){chatContainerRef.current.scrollTop=chatContainerRef.current.scrollHeight;}},[messages]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Chrome Extension Chatbot\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",ref:chatContainerRef,children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender),children:message.text},index))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"message\",className:\"message-input\",placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",children:\"Send\"})]})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","chatContainerRef","reminderIntervals","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","response","post","botMessage","data","prevMessages","startsWith","siteUrl","substring","window","open","reminderMessage","setReminder","stopAllReminders","error","console","includes","task","interval","split","intervalMinutes","parseInt","isNaN","intervalId","setInterval","alert","concat","current","push","time","now","Date","reminderTime","toDateString","setDate","getDate","timeout","setTimeout","forEach","clearInterval","scrollTop","scrollHeight","className","children","ref","map","index","onSubmit","type","name","placeholder"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Assuming you have your CSS styles in App.css\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const chatContainerRef = useRef(null);\n  const reminderIntervals = useRef([]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n\n        const botMessage = { text: response.data.message, sender: 'assistant' };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n\n      e.target.message.value = '';\n    }\n  };\n\n  const setReminder = (reminderMessage) => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n\n      const timeout = reminderTime - now;\n\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"App\">\n      <h1>Chrome Extension Chatbot</h1>\n      <div className=\"chat-container\" ref={chatContainerRef}>\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={handleSendMessage}>\n          <input type=\"text\" name=\"message\" className=\"message-input\" placeholder=\"Type your message...\" />\n          <button type=\"submit\" className=\"send-button\">Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAW,gBAAgB,CAAGT,MAAM,CAAC,IAAI,CAAC,CACrC,KAAM,CAAAU,iBAAiB,CAAGV,MAAM,CAAC,EAAE,CAAC,CAEpC,KAAM,CAAAW,iBAAiB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACrCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,UAAU,CAAGF,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,CACzC,GAAIH,UAAU,CAACI,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC5B,KAAM,CAAAC,WAAW,CAAG,CAAEC,IAAI,CAAEN,UAAU,CAAEO,MAAM,CAAE,MAAO,CAAC,CACxDb,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEY,WAAW,CAAC,CAAC,CAEvC,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAArB,KAAK,CAACsB,IAAI,CAAC,oCAAoC,CAAE,CACtEP,OAAO,CAAEF,UACX,CAAC,CAAC,CAEF,KAAM,CAAAU,UAAU,CAAG,CAAEJ,IAAI,CAAEE,QAAQ,CAACG,IAAI,CAACT,OAAO,CAAEK,MAAM,CAAE,WAAY,CAAC,CACvEb,WAAW,CAACkB,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAEF,UAAU,CAAC,CAAC,CAE1D,GAAIF,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACW,UAAU,CAAC,SAAS,CAAC,CAAE,CAC/C,KAAM,CAAAC,OAAO,CAAGN,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACa,SAAS,CAAC,CAAC,CAAC,CAACX,IAAI,CAAC,CAAC,CACzDY,MAAM,CAACC,IAAI,CAACH,OAAO,CAAE,QAAQ,CAAC,CAChC,CAEA,GAAIN,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACW,UAAU,CAAC,eAAe,CAAC,CAAE,CACrD,KAAM,CAAAK,eAAe,CAAGV,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACa,SAAS,CAAC,EAAE,CAAC,CAACX,IAAI,CAAC,CAAC,CAClEe,WAAW,CAACD,eAAe,CAAC,CAC9B,CAEA,GAAIV,QAAQ,CAACG,IAAI,CAACT,OAAO,GAAK,wBAAwB,CAAE,CACtDkB,gBAAgB,CAAC,CAAC,CACpB,CAEF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CAEAvB,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,CAAG,EAAE,CAC7B,CACF,CAAC,CAED,KAAM,CAAAgB,WAAW,CAAID,eAAe,EAAK,CACvC,GAAIA,eAAe,CAACK,QAAQ,CAAC,OAAO,CAAC,CAAE,CACrC,KAAM,CAACC,IAAI,CAAEC,QAAQ,CAAC,CAAGP,eAAe,CAACQ,KAAK,CAAC,SAAS,CAAC,CACzD,KAAM,CAAAC,eAAe,CAAGC,QAAQ,CAACH,QAAQ,CAAE,EAAE,CAAC,CAE9C,GAAI,CAACI,KAAK,CAACF,eAAe,CAAC,CAAE,CAC3B,KAAM,CAAAG,UAAU,CAAGC,WAAW,CAAC,IAAM,CACnCC,KAAK,cAAAC,MAAA,CAAcT,IAAI,CAAE,CAAC,CAC5B,CAAC,CAAEG,eAAe,CAAG,EAAE,CAAG,IAAI,CAAC,CAC/B/B,iBAAiB,CAACsC,OAAO,CAACC,IAAI,CAACL,UAAU,CAAC,CAC5C,CACF,CAAC,IAAM,CACL,KAAM,CAACN,IAAI,CAAEY,IAAI,CAAC,CAAGlB,eAAe,CAACQ,KAAK,CAAC,MAAM,CAAC,CAClD,KAAM,CAAAW,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAD,IAAI,CAACD,GAAG,CAACG,YAAY,CAAC,CAAC,CAAG,GAAG,CAAGJ,IAAI,CAAC,CAE9D,GAAIG,YAAY,CAAGF,GAAG,CAAE,CACtBE,YAAY,CAACE,OAAO,CAACF,YAAY,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAClD,CAEA,KAAM,CAAAC,OAAO,CAAGJ,YAAY,CAAGF,GAAG,CAElCO,UAAU,CAAC,IAAM,CACfZ,KAAK,cAAAC,MAAA,CAAcT,IAAI,CAAE,CAAC,CAC5B,CAAC,CAAEmB,OAAO,CAAC,CACb,CACF,CAAC,CAED,KAAM,CAAAvB,gBAAgB,CAAGA,CAAA,GAAM,CAC7BxB,iBAAiB,CAACsC,OAAO,CAACW,OAAO,CAACf,UAAU,EAAIgB,aAAa,CAAChB,UAAU,CAAC,CAAC,CAC1ElC,iBAAiB,CAACsC,OAAO,CAAG,EAAE,CAChC,CAAC,CAEDjD,SAAS,CAAC,IAAM,CACd,GAAIU,gBAAgB,CAACuC,OAAO,CAAE,CAC5BvC,gBAAgB,CAACuC,OAAO,CAACa,SAAS,CAAGpD,gBAAgB,CAACuC,OAAO,CAACc,YAAY,CAC5E,CACF,CAAC,CAAE,CAACvD,QAAQ,CAAC,CAAC,CAEd,mBACEF,KAAA,QAAK0D,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB7D,IAAA,OAAA6D,QAAA,CAAI,0BAAwB,CAAI,CAAC,cACjC3D,KAAA,QAAK0D,SAAS,CAAC,gBAAgB,CAACE,GAAG,CAAExD,gBAAiB,CAAAuD,QAAA,eACpD7D,IAAA,QAAK4D,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BzD,QAAQ,CAAC2D,GAAG,CAAC,CAAClD,OAAO,CAAEmD,KAAK,gBAC3BhE,IAAA,QAAiB4D,SAAS,YAAAhB,MAAA,CAAa/B,OAAO,CAACK,MAAM,CAAG,CAAA2C,QAAA,CACrDhD,OAAO,CAACI,IAAI,EADL+C,KAEL,CACN,CAAC,CACC,CAAC,cACN9D,KAAA,SAAM+D,QAAQ,CAAEzD,iBAAkB,CAAAqD,QAAA,eAChC7D,IAAA,UAAOkE,IAAI,CAAC,MAAM,CAACC,IAAI,CAAC,SAAS,CAACP,SAAS,CAAC,eAAe,CAACQ,WAAW,CAAC,sBAAsB,CAAE,CAAC,cACjGpE,IAAA,WAAQkE,IAAI,CAAC,QAAQ,CAACN,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,MAAI,CAAQ,CAAC,EACvD,CAAC,EACJ,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1D,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}