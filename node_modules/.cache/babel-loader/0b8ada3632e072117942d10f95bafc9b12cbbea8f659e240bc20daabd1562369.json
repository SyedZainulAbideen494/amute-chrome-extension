{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./App.css';// Assuming you have your CSS styles in App.css\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[messages,setMessages]=useState([]);const handleSendMessage=async e=>{e.preventDefault();const newMessage=e.target.message.value;if(newMessage.trim()!==''){// Add user message to state for immediate UI update\nconst userMessage={text:newMessage,sender:'user'};setMessages([...messages,userMessage]);try{// Send message to backend\nconst response=await axios.post('http://localhost:8080/send-message',{message:newMessage});// Add bot response to state after receiving response from backend\nconst botMessage={text:response.data.message,sender:'assistant'};setMessages([...messages,botMessage]);// Check if the response is for opening a site\nif(response.data.message.startsWith('Opening')){// Open the site in a new tab\nconst siteUrl=response.data.message.substring(8).trim();// Remove 'Opening ' from the start\nwindow.open(siteUrl,'_blank');}// Optionally handle other responses from the backend\n}catch(error){console.error('Error sending message:',error);// Handle error (e.g., show error message to user)\n}// Clear input field after sending message\ne.target.message.value='';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Chrome Extension Chatbot\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender),children:message.text},index))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"message\",className:\"message-input\",placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",children:\"Send\"})]})]})]});};export default App;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","response","post","botMessage","data","startsWith","siteUrl","substring","window","open","error","console","className","children","map","index","concat","onSubmit","type","name","placeholder"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Assuming you have your CSS styles in App.css\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      // Add user message to state for immediate UI update\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        // Send message to backend\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n\n        // Add bot response to state after receiving response from backend\n        const botMessage = { text: response.data.message, sender: 'assistant' };\n        setMessages([...messages, botMessage]);\n\n        // Check if the response is for opening a site\n        if (response.data.message.startsWith('Opening')) {\n          // Open the site in a new tab\n          const siteUrl = response.data.message.substring(8).trim(); // Remove 'Opening ' from the start\n          window.open(siteUrl, '_blank');\n        }\n\n        // Optionally handle other responses from the backend\n\n      } catch (error) {\n        console.error('Error sending message:', error);\n        // Handle error (e.g., show error message to user)\n      }\n\n      // Clear input field after sending message\n      e.target.message.value = '';\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chrome Extension Chatbot</h1>\n      <div className=\"chat-container\">\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={handleSendMessage}>\n          <input type=\"text\" name=\"message\" className=\"message-input\" placeholder=\"Type your message...\" />\n          <button type=\"submit\" className=\"send-button\">Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAS,iBAAiB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACrCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,UAAU,CAAGF,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,CACzC,GAAIH,UAAU,CAACI,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC5B;AACA,KAAM,CAAAC,WAAW,CAAG,CAAEC,IAAI,CAAEN,UAAU,CAAEO,MAAM,CAAE,MAAO,CAAC,CACxDX,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEU,WAAW,CAAC,CAAC,CAEvC,GAAI,CACF;AACA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAnB,KAAK,CAACoB,IAAI,CAAC,oCAAoC,CAAE,CACtEP,OAAO,CAAEF,UACX,CAAC,CAAC,CAEF;AACA,KAAM,CAAAU,UAAU,CAAG,CAAEJ,IAAI,CAAEE,QAAQ,CAACG,IAAI,CAACT,OAAO,CAAEK,MAAM,CAAE,WAAY,CAAC,CACvEX,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEe,UAAU,CAAC,CAAC,CAEtC;AACA,GAAIF,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACU,UAAU,CAAC,SAAS,CAAC,CAAE,CAC/C;AACA,KAAM,CAAAC,OAAO,CAAGL,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACY,SAAS,CAAC,CAAC,CAAC,CAACV,IAAI,CAAC,CAAC,CAAE;AAC3DW,MAAM,CAACC,IAAI,CAACH,OAAO,CAAE,QAAQ,CAAC,CAChC,CAEA;AAEF,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C;AACF,CAEA;AACAnB,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,CAAG,EAAE,CAC7B,CACF,CAAC,CAED,mBACEV,KAAA,QAAK0B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB7B,IAAA,OAAA6B,QAAA,CAAI,0BAAwB,CAAI,CAAC,cACjC3B,KAAA,QAAK0B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B7B,IAAA,QAAK4B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BzB,QAAQ,CAAC0B,GAAG,CAAC,CAACnB,OAAO,CAAEoB,KAAK,gBAC3B/B,IAAA,QAAiB4B,SAAS,YAAAI,MAAA,CAAarB,OAAO,CAACK,MAAM,CAAG,CAAAa,QAAA,CACrDlB,OAAO,CAACI,IAAI,EADLgB,KAEL,CACN,CAAC,CACC,CAAC,cACN7B,KAAA,SAAM+B,QAAQ,CAAE3B,iBAAkB,CAAAuB,QAAA,eAChC7B,IAAA,UAAOkC,IAAI,CAAC,MAAM,CAACC,IAAI,CAAC,SAAS,CAACP,SAAS,CAAC,eAAe,CAACQ,WAAW,CAAC,sBAAsB,CAAE,CAAC,cACjGpC,IAAA,WAAQkC,IAAI,CAAC,QAAQ,CAACN,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,MAAI,CAAQ,CAAC,EACvD,CAAC,EACJ,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}