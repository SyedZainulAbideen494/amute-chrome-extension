{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\my-chrome-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Assuming you have your CSS styles in App.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const reminderIntervals = useRef([]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = {\n        text: newMessage,\n        sender: 'user'\n      };\n      setMessages([...messages, userMessage]);\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n        const botMessage = {\n          text: response.data.message,\n          sender: 'assistant'\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n        if (response.data.message === 'Fetching your to-do list...') {\n          fetchTodos();\n          setShowTodos(true);\n        }\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n      e.target.message.value = '';\n    }\n  };\n  const addTodoTask = task => {\n    setTodos([...todos, {\n      id: todos.length + 1,\n      task,\n      completed: false\n    }]);\n  };\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const removeTodoTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== Number(taskId)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n  const handleCompleteTask = async (taskId, completed) => {\n    try {\n      await axios.put(`http://localhost:8080/todos/${taskId}`, {\n        completed\n      });\n      setTodos(todos.map(todo => todo.id === taskId ? {\n        ...todo,\n        completed\n      } : todo));\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chrome Extension Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          className: \"message-input\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), showTodos && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: e => handleCompleteTask(todo.id, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: todo.completed ? 'completed' : '',\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ws9E1enjDM6jLyTdRJLm1MAz2Uw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","todos","setTodos","showTodos","setShowTodos","chatContainerRef","reminderIntervals","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","response","post","botMessage","data","prevMessages","startsWith","siteUrl","substring","window","open","reminderMessage","setReminder","stopAllReminders","fetchTodos","task","addTodoTask","taskId","removeTodoTask","error","console","id","length","completed","get","delete","filter","todo","Number","handleCompleteTask","put","map","current","forEach","intervalId","clearInterval","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","index","onSubmit","type","name","placeholder","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Assuming you have your CSS styles in App.css\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const reminderIntervals = useRef([]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n\n        const botMessage = { text: response.data.message, sender: 'assistant' };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n\n        if (response.data.message === 'Fetching your to-do list...') {\n          fetchTodos();\n          setShowTodos(true);\n        }\n\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n\n      e.target.message.value = '';\n    }\n  };\n\n  const addTodoTask = (task) => {\n    setTodos([...todos, { id: todos.length + 1, task, completed: false }]);\n  };\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const removeTodoTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== Number(taskId)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId, completed) => {\n    try {\n      await axios.put(`http://localhost:8080/todos/${taskId}`, { completed });\n      setTodos(todos.map(todo => todo.id === taskId ? { ...todo, completed } : todo));\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"App\">\n      <h1>Chrome Extension Chatbot</h1>\n      <div className=\"chat-container\" ref={chatContainerRef}>\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={handleSendMessage}>\n          <input type=\"text\" name=\"message\" className=\"message-input\" placeholder=\"Type your message...\" />\n          <button type=\"submit\" className=\"send-button\">Send</button>\n        </form>\n      </div>\n      {showTodos && (\n        <div className=\"todo-list\">\n          <h2>Your To-Do List</h2>\n          {todos.map(todo => (\n            <div key={todo.id} className=\"todo-item\">\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={(e) => handleCompleteTask(todo.id, e.target.checked)}\n              />\n              <span className={todo.completed ? 'completed' : ''}>{todo.task}</span>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMc,gBAAgB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMa,iBAAiB,GAAGb,MAAM,CAAC,EAAE,CAAC;EAEpC,MAAMc,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,UAAU,GAAGF,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK;IACzC,IAAIH,UAAU,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B,MAAMC,WAAW,GAAG;QAAEC,IAAI,EAAEN,UAAU;QAAEO,MAAM,EAAE;MAAO,CAAC;MACxDjB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEgB,WAAW,CAAC,CAAC;MAEvC,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,oCAAoC,EAAE;UACtEP,OAAO,EAAEF;QACX,CAAC,CAAC;QAEF,MAAMU,UAAU,GAAG;UAAEJ,IAAI,EAAEE,QAAQ,CAACG,IAAI,CAACT,OAAO;UAAEK,MAAM,EAAE;QAAY,CAAC;QACvEjB,WAAW,CAACsB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEF,UAAU,CAAC,CAAC;QAE1D,IAAIF,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACW,UAAU,CAAC,SAAS,CAAC,EAAE;UAC/C,MAAMC,OAAO,GAAGN,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACa,SAAS,CAAC,CAAC,CAAC,CAACX,IAAI,CAAC,CAAC;UACzDY,MAAM,CAACC,IAAI,CAACH,OAAO,EAAE,QAAQ,CAAC;QAChC;QAEA,IAAIN,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACW,UAAU,CAAC,eAAe,CAAC,EAAE;UACrD,MAAMK,eAAe,GAAGV,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACa,SAAS,CAAC,EAAE,CAAC,CAACX,IAAI,CAAC,CAAC;UAClEe,WAAW,CAACD,eAAe,CAAC;QAC9B;QAEA,IAAIV,QAAQ,CAACG,IAAI,CAACT,OAAO,KAAK,wBAAwB,EAAE;UACtDkB,gBAAgB,CAAC,CAAC;QACpB;QAEA,IAAIZ,QAAQ,CAACG,IAAI,CAACT,OAAO,KAAK,6BAA6B,EAAE;UAC3DmB,UAAU,CAAC,CAAC;UACZ3B,YAAY,CAAC,IAAI,CAAC;QACpB;QAEA,IAAIc,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACW,UAAU,CAAC,4BAA4B,CAAC,EAAE;UAClE,MAAMS,IAAI,GAAGd,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACa,SAAS,CAAC,EAAE,CAAC,CAACX,IAAI,CAAC,CAAC;UACvDmB,WAAW,CAACD,IAAI,CAAC;QACnB;QAEA,IAAId,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACW,UAAU,CAAC,6CAA6C,CAAC,EAAE;UACnF,MAAMW,MAAM,GAAGhB,QAAQ,CAACG,IAAI,CAACT,OAAO,CAACa,SAAS,CAAC,EAAE,CAAC,CAACX,IAAI,CAAC,CAAC;UACzDqB,cAAc,CAACD,MAAM,CAAC;QACxB;MAEF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;MAEA5B,CAAC,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,GAAG,EAAE;IAC7B;EACF,CAAC;EAED,MAAMoB,WAAW,GAAID,IAAI,IAAK;IAC5B9B,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEqC,EAAE,EAAErC,KAAK,CAACsC,MAAM,GAAG,CAAC;MAAEP,IAAI;MAAEQ,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;EACxE,CAAC;EAED,MAAMT,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMxB,KAAK,CAAC+C,GAAG,CAAC,6BAA6B,CAAC;MAC/DvC,QAAQ,CAACgB,QAAQ,CAACG,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMD,cAAc,GAAG,MAAOD,MAAM,IAAK;IACvC,IAAI;MACF,MAAMxC,KAAK,CAACgD,MAAM,CAAC,+BAA+BR,MAAM,EAAE,CAAC;MAC3DhC,QAAQ,CAACD,KAAK,CAAC0C,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKO,MAAM,CAACX,MAAM,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMU,kBAAkB,GAAG,MAAAA,CAAOZ,MAAM,EAAEM,SAAS,KAAK;IACtD,IAAI;MACF,MAAM9C,KAAK,CAACqD,GAAG,CAAC,+BAA+Bb,MAAM,EAAE,EAAE;QAAEM;MAAU,CAAC,CAAC;MACvEtC,QAAQ,CAACD,KAAK,CAAC+C,GAAG,CAACJ,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKJ,MAAM,GAAG;QAAE,GAAGU,IAAI;QAAEJ;MAAU,CAAC,GAAGI,IAAI,CAAC,CAAC;IACjF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMN,gBAAgB,GAAGA,CAAA,KAAM;IAC7BxB,iBAAiB,CAAC2C,OAAO,CAACC,OAAO,CAACC,UAAU,IAAIC,aAAa,CAACD,UAAU,CAAC,CAAC;IAC1E7C,iBAAiB,CAAC2C,OAAO,GAAG,EAAE;EAChC,CAAC;EAEDzD,SAAS,CAAC,MAAM;IACd,IAAIa,gBAAgB,CAAC4C,OAAO,EAAE;MAC5B5C,gBAAgB,CAAC4C,OAAO,CAACI,SAAS,GAAGhD,gBAAgB,CAAC4C,OAAO,CAACK,YAAY;IAC5E;EACF,CAAC,EAAE,CAACvD,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAK2D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5D,OAAA;MAAA4D,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjChE,OAAA;MAAK2D,SAAS,EAAC,gBAAgB;MAACM,GAAG,EAAExD,gBAAiB;MAAAmD,QAAA,gBACpD5D,OAAA;QAAK2D,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BzD,QAAQ,CAACiD,GAAG,CAAC,CAACpC,OAAO,EAAEkD,KAAK,kBAC3BlE,OAAA;UAAiB2D,SAAS,EAAE,WAAW3C,OAAO,CAACK,MAAM,EAAG;UAAAuC,QAAA,EACrD5C,OAAO,CAACI;QAAI,GADL8C,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhE,OAAA;QAAMmE,QAAQ,EAAExD,iBAAkB;QAAAiD,QAAA,gBAChC5D,OAAA;UAAOoE,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,SAAS;UAACV,SAAS,EAAC,eAAe;UAACW,WAAW,EAAC;QAAsB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjGhE,OAAA;UAAQoE,IAAI,EAAC,QAAQ;UAACT,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACLzD,SAAS,iBACRP,OAAA;MAAK2D,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB5D,OAAA;QAAA4D,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvB3D,KAAK,CAAC+C,GAAG,CAACJ,IAAI,iBACbhD,OAAA;QAAmB2D,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtC5D,OAAA;UACEoE,IAAI,EAAC,UAAU;UACfG,OAAO,EAAEvB,IAAI,CAACJ,SAAU;UACxB4B,QAAQ,EAAG5D,CAAC,IAAKsC,kBAAkB,CAACF,IAAI,CAACN,EAAE,EAAE9B,CAAC,CAACG,MAAM,CAACwD,OAAO;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACFhE,OAAA;UAAM2D,SAAS,EAAEX,IAAI,CAACJ,SAAS,GAAG,WAAW,GAAG,EAAG;UAAAgB,QAAA,EAAEZ,IAAI,CAACZ;QAAI;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAN9DhB,IAAI,CAACN,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9D,EAAA,CAtIID,GAAG;AAAAwE,EAAA,GAAHxE,GAAG;AAwIT,eAAeA,GAAG;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}