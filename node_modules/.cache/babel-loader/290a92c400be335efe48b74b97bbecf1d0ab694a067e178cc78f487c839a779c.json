{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\my-chrome-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your CSS styles\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni;\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const robotEyesRef = useRef([null, null]); // Ref for robot's eyes\n  const [notes, setNotes] = useState([]);\n  const reminderIntervals = useRef([]);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  useEffect(() => {\n    fetchTodos();\n    initSpotify();\n  }, []);\n  const spotifyApi = new SpotifyWebApi();\n  const initSpotify = async () => {\n    // Fetch Spotify access token\n    const token = await fetchSpotifyToken();\n    setSpotifyToken(token);\n\n    // Set access token for Spotify Web API library\n    spotifyApi.setAccessToken(token);\n  };\n  const fetchSpotifyToken = async () => {\n    try {\n      // Replace 'your-auth-endpoint' with your actual backend endpoint URL\n      const response = await axios.get('http://localhost:5000/auth/spotify/token');\n      return response.data.access_token; // Assuming your endpoint returns an access token\n    } catch (error) {\n      console.error('Error fetching Spotify token:', error);\n      // Handle error fetching token (e.g., redirect to login, show error message)\n      // Throw an error or return a default/fallback token as needed\n      throw new Error('Failed to fetch Spotify access token');\n    }\n  };\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = {\n        text: newMessage,\n        sender: 'user'\n      };\n      setMessages([...messages, userMessage]);\n      try {\n        const response = await axios.post('http://localhost:5000/send-message', {\n          message: newMessage\n        });\n        const botMessage = {\n          text: response.data.message,\n          sender: 'assistant'\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n        if (response.data.message === 'Fetching your to-do list...') {\n          setShowTodos(true);\n        }\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n        if (response.data.message.startsWith('Play a song by')) {\n          const [command, songInfo] = response.data.message.split('Play a song by ');\n          const [song, artist] = songInfo.split(' by ');\n          playSongByArtist(song.trim(), artist.trim());\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n      e.target.message.value = '';\n    }\n  };\n  const setReminder = reminderMessage => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n      const timeout = reminderTime - now;\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n  const addTodoTask = async task => {\n    try {\n      const response = await axios.post('http://localhost:5000/todos', {\n        task\n      });\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  const removeTodoTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:5000/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n  const toggleTodoCompletion = async taskId => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        await axios.put(`http://localhost:5000/todos/${taskId}`, updatedTodo);\n        setTodos(todos.map(todo => todo.id === taskId ? updatedTodo : todo));\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n  const playSongByArtist = async (songName, artist) => {\n    try {\n      const response = await spotifyApi.searchTracks(`track:${songName} artist:${artist}`);\n      if (response.tracks.items.length > 0) {\n        const track = response.tracks.items[0];\n        window.open(track.external_urls.spotify, '_blank'); // Open Spotify track in a new tab\n      } else {\n        console.error(`No tracks found for song: ${songName} by artist: ${artist}`);\n      }\n    } catch (error) {\n      console.error('Error playing song:', error);\n    }\n  };\n  useEffect(() => {\n    // Scroll chat to bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Function to update robot's eyes position\n  const updateRobotEyes = e => {\n    const mouseX = e.pageX;\n    const mouseY = e.pageY;\n    const eye1 = robotEyesRef.current[0];\n    const eye2 = robotEyesRef.current[1];\n    if (eye1 && eye2) {\n      const eyeSize = 12; // Adjust based on eye size\n      const eyeCenterX = eye1.getBoundingClientRect().left + eyeSize / 2;\n      const eyeCenterY = eye1.getBoundingClientRect().top + eyeSize / 2;\n      const deltaX1 = mouseX - eyeCenterX;\n      const deltaY1 = mouseY - eyeCenterY;\n      const distance1 = Math.sqrt(deltaX1 * deltaX1 + deltaY1 * deltaY1);\n      const deltaX2 = mouseX - (eye2.getBoundingClientRect().left + eyeSize / 2);\n      const deltaY2 = mouseY - (eye2.getBoundingClientRect().top + eyeSize / 2);\n      const distance2 = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\n      const maxEyeMove = 3; // Adjust eye movement sensitivity\n\n      eye1.style.transform = `translate(${deltaX1 / distance1 * maxEyeMove}px, ${deltaY1 / distance1 * maxEyeMove}px)`;\n      eye2.style.transform = `translate(${deltaX2 / distance2 * maxEyeMove}px, ${deltaY2 / distance2 * maxEyeMove}px)`;\n    }\n  };\n  useEffect(() => {\n    // Add mousemove event listener to update robot's eyes position\n    document.addEventListener('mousemove', updateRobotEyes);\n    return () => {\n      // Clean up event listener on component unmount\n      document.removeEventListener('mousemove', updateRobotEyes);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat with Amute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          className: \"message-input\",\n          placeholder: \"compose your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: showTodos && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your To-Do List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: todo.completed ? 'completed' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => toggleTodoCompletion(todo.id),\n                children: todo.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeTodoTask(todo.id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"N1HVeO6BwoGVmG+QYlZ6VfvaXwg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","SpotifyWebApi","jsxDEV","_jsxDEV","i","App","_s","messages","setMessages","todos","setTodos","showTodos","setShowTodos","chatContainerRef","robotEyesRef","notes","setNotes","reminderIntervals","spotifyToken","setSpotifyToken","fetchTodos","initSpotify","spotifyApi","token","fetchSpotifyToken","setAccessToken","response","get","data","access_token","error","console","Error","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","post","botMessage","prevMessages","startsWith","siteUrl","substring","window","open","reminderMessage","setReminder","stopAllReminders","task","addTodoTask","taskId","removeTodoTask","command","songInfo","split","song","artist","playSongByArtist","includes","interval","intervalMinutes","parseInt","isNaN","intervalId","setInterval","alert","current","push","time","now","Date","reminderTime","toDateString","setDate","getDate","timeout","setTimeout","forEach","clearInterval","delete","filter","todo","id","toggleTodoCompletion","find","updatedTodo","completed","put","map","songName","searchTracks","tracks","items","length","track","external_urls","spotify","scrollTop","scrollHeight","updateRobotEyes","mouseX","pageX","mouseY","pageY","eye1","eye2","eyeSize","eyeCenterX","getBoundingClientRect","left","eyeCenterY","top","deltaX1","deltaY1","distance1","Math","sqrt","deltaX2","deltaY2","distance2","maxEyeMove","style","transform","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onSubmit","type","name","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your CSS styles\nimport SpotifyWebApi from 'spotify-web-api-js';\ni\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [showTodos, setShowTodos] = useState(false);\n  const chatContainerRef = useRef(null);\n  const robotEyesRef = useRef([null, null]); // Ref for robot's eyes\n  const [notes, setNotes] = useState([]);\n  const reminderIntervals = useRef([]);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n\n\n  useEffect(() => {\n    fetchTodos();\n    initSpotify();\n  }, []);\n\n  const spotifyApi = new SpotifyWebApi();\n\n  const initSpotify = async () => {\n    // Fetch Spotify access token\n    const token = await fetchSpotifyToken();\n    setSpotifyToken(token);\n\n    // Set access token for Spotify Web API library\n    spotifyApi.setAccessToken(token);\n  };\n\n  const fetchSpotifyToken = async () => {\n    try {\n      // Replace 'your-auth-endpoint' with your actual backend endpoint URL\n      const response = await axios.get('http://localhost:5000/auth/spotify/token');\n      return response.data.access_token; // Assuming your endpoint returns an access token\n    } catch (error) {\n      console.error('Error fetching Spotify token:', error);\n      // Handle error fetching token (e.g., redirect to login, show error message)\n      // Throw an error or return a default/fallback token as needed\n      throw new Error('Failed to fetch Spotify access token');\n    }\n  };\n\n\n  \n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        const response = await axios.post('http://localhost:5000/send-message', {\n          message: newMessage\n        });\n\n        const botMessage = { text: response.data.message, sender: 'assistant' };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n\n        if (response.data.message === 'Fetching your to-do list...') {\n          setShowTodos(true);\n        }\n\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n\n\n        if (response.data.message.startsWith('Play a song by')) {\n          const [command, songInfo] = response.data.message.split('Play a song by ');\n          const [song, artist] = songInfo.split(' by ');\n          playSongByArtist(song.trim(), artist.trim());\n        }\n      \n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n\n      e.target.message.value = '';\n    }\n  };\n\n  const setReminder = (reminderMessage) => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n\n      const timeout = reminderTime - now;\n\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n\n\n  \n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n\n  const addTodoTask = async (task) => {\n    try {\n      const response = await axios.post('http://localhost:5000/todos', { task });\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const removeTodoTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:5000/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n\n  const toggleTodoCompletion = async (taskId) => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        await axios.put(`http://localhost:5000/todos/${taskId}`, updatedTodo);\n        setTodos(todos.map(todo => (todo.id === taskId ? updatedTodo : todo)));\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n\n  const playSongByArtist = async (songName, artist) => {\n    try {\n      const response = await spotifyApi.searchTracks(`track:${songName} artist:${artist}`);\n  \n      if (response.tracks.items.length > 0) {\n        const track = response.tracks.items[0];\n        window.open(track.external_urls.spotify, '_blank'); // Open Spotify track in a new tab\n      } else {\n        console.error(`No tracks found for song: ${songName} by artist: ${artist}`);\n      }\n    } catch (error) {\n      console.error('Error playing song:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Scroll chat to bottom whenever messages change\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n \n\n\n  // Function to update robot's eyes position\n  const updateRobotEyes = (e) => {\n    const mouseX = e.pageX;\n    const mouseY = e.pageY;\n    const eye1 = robotEyesRef.current[0];\n    const eye2 = robotEyesRef.current[1];\n\n    if (eye1 && eye2) {\n      const eyeSize = 12; // Adjust based on eye size\n      const eyeCenterX = eye1.getBoundingClientRect().left + eyeSize / 2;\n      const eyeCenterY = eye1.getBoundingClientRect().top + eyeSize / 2;\n\n      const deltaX1 = mouseX - eyeCenterX;\n      const deltaY1 = mouseY - eyeCenterY;\n      const distance1 = Math.sqrt(deltaX1 * deltaX1 + deltaY1 * deltaY1);\n\n      const deltaX2 = mouseX - (eye2.getBoundingClientRect().left + eyeSize / 2);\n      const deltaY2 = mouseY - (eye2.getBoundingClientRect().top + eyeSize / 2);\n      const distance2 = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\n\n      const maxEyeMove = 3; // Adjust eye movement sensitivity\n\n      eye1.style.transform = `translate(${deltaX1 / distance1 * maxEyeMove}px, ${deltaY1 / distance1 * maxEyeMove}px)`;\n      eye2.style.transform = `translate(${deltaX2 / distance2 * maxEyeMove}px, ${deltaY2 / distance2 * maxEyeMove}px)`;\n    }\n  };\n\n  \n  useEffect(() => {\n    // Add mousemove event listener to update robot's eyes position\n    document.addEventListener('mousemove', updateRobotEyes);\n\n    return () => {\n      // Clean up event listener on component unmount\n      document.removeEventListener('mousemove', updateRobotEyes);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n    <div className=\"chat-container\">\n      <header className=\"chat-header\">\n        <h2>Chat with Amute</h2>\n      </header>\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.sender}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSendMessage} className=\"message-form\">\n        <input type=\"text\" name=\"message\" className=\"message-input\" placeholder=\"compose your message...\" />\n        <button type=\"submit\" className=\"send-button\">Send</button>\n      </form>\n      <div className=\"actions\">\n        {showTodos && (\n          <div className=\"todo-list\">\n            <h2>Your To-Do List</h2>\n            <ul>\n              {todos.map(todo => (\n                <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n                  <span onClick={() => toggleTodoCompletion(todo.id)}>{todo.task}</span>\n                  <button onClick={() => removeTodoTask(todo.id)}>Remove</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}