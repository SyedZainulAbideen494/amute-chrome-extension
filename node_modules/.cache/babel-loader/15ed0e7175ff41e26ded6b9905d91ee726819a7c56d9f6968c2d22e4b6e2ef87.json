{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\my-chrome-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const chatContainerRef = useRef(null);\n  const reminderIntervals = useRef([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = {\n        text: newMessage,\n        sender: 'user'\n      };\n      setMessages([...messages, userMessage]);\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n        const botMessage = {\n          text: response.data.message,\n          sender: 'assistant'\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n        if (response.data.message === 'Fetching your to-do list...') {\n          fetchTodos();\n        }\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n      e.target.message.value = '';\n    }\n  };\n  const setReminder = reminderMessage => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n      const timeout = reminderTime - now;\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n  const addTodoTask = async task => {\n    try {\n      const response = await axios.post('http://localhost:8080/todos', {\n        task\n      });\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  const removeTodoTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n  const toggleTodoCompletion = async taskId => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        await axios.put(`http://localhost:8080/todos/${taskId}`, updatedTodo);\n        setTodos(todos.map(todo => todo.id === taskId ? updatedTodo : todo));\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages, todos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chrome Extension Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          className: \"message-input\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: todo.completed ? 'completed' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => toggleTodoCompletion(todo.id),\n              children: todo.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeTodoTask(todo.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Y1ohQ6f6fOmfboW3WfoSRzMt5pk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","todos","setTodos","chatContainerRef","reminderIntervals","fetchTodos","response","get","data","error","console","handleSendMessage","e","preventDefault","newMessage","target","message","value","trim","userMessage","text","sender","post","botMessage","prevMessages","startsWith","siteUrl","substring","window","open","reminderMessage","setReminder","stopAllReminders","task","addTodoTask","taskId","removeTodoTask","includes","interval","split","intervalMinutes","parseInt","isNaN","intervalId","setInterval","alert","current","push","time","now","Date","reminderTime","toDateString","setDate","getDate","timeout","setTimeout","forEach","clearInterval","delete","filter","todo","id","toggleTodoCompletion","find","updatedTodo","completed","put","map","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","index","onSubmit","type","name","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/my-chrome-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const chatContainerRef = useRef(null);\n  const reminderIntervals = useRef([]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const newMessage = e.target.message.value;\n    if (newMessage.trim() !== '') {\n      const userMessage = { text: newMessage, sender: 'user' };\n      setMessages([...messages, userMessage]);\n\n      try {\n        const response = await axios.post('http://localhost:8080/send-message', {\n          message: newMessage\n        });\n\n        const botMessage = { text: response.data.message, sender: 'assistant' };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n\n        if (response.data.message.startsWith('Opening')) {\n          const siteUrl = response.data.message.substring(8).trim();\n          window.open(siteUrl, '_blank');\n        }\n\n        if (response.data.message.startsWith('Reminder set:')) {\n          const reminderMessage = response.data.message.substring(14).trim();\n          setReminder(reminderMessage);\n        }\n\n        if (response.data.message === 'All reminders stopped.') {\n          stopAllReminders();\n        }\n\n        if (response.data.message === 'Fetching your to-do list...') {\n          fetchTodos();\n        }\n\n        if (response.data.message.startsWith('Adding to your to-do list:')) {\n          const task = response.data.message.substring(25).trim();\n          addTodoTask(task);\n        }\n\n        if (response.data.message.startsWith('Removing item from your to-do list with ID:')) {\n          const taskId = response.data.message.substring(42).trim();\n          removeTodoTask(taskId);\n        }\n\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n\n      e.target.message.value = '';\n    }\n  };\n\n  const setReminder = (reminderMessage) => {\n    if (reminderMessage.includes('every')) {\n      const [task, interval] = reminderMessage.split(' every ');\n      const intervalMinutes = parseInt(interval, 10);\n\n      if (!isNaN(intervalMinutes)) {\n        const intervalId = setInterval(() => {\n          alert(`Reminder: ${task}`);\n        }, intervalMinutes * 60 * 1000);\n        reminderIntervals.current.push(intervalId);\n      }\n    } else {\n      const [task, time] = reminderMessage.split(' at ');\n      const now = new Date();\n      const reminderTime = new Date(now.toDateString() + ' ' + time);\n\n      if (reminderTime < now) {\n        reminderTime.setDate(reminderTime.getDate() + 1);\n      }\n\n      const timeout = reminderTime - now;\n\n      setTimeout(() => {\n        alert(`Reminder: ${task}`);\n      }, timeout);\n    }\n  };\n\n  const stopAllReminders = () => {\n    reminderIntervals.current.forEach(intervalId => clearInterval(intervalId));\n    reminderIntervals.current = [];\n  };\n\n  const addTodoTask = async (task) => {\n    try {\n      const response = await axios.post('http://localhost:8080/todos', { task });\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const removeTodoTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${taskId}`);\n      setTodos(todos.filter(todo => todo.id !== parseInt(taskId, 10)));\n    } catch (error) {\n      console.error('Error removing todo:', error);\n    }\n  };\n\n  const toggleTodoCompletion = async (taskId) => {\n    const todo = todos.find(todo => todo.id === taskId);\n    if (todo) {\n      try {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        await axios.put(`http://localhost:8080/todos/${taskId}`, updatedTodo);\n        setTodos(todos.map(todo => (todo.id === taskId ? updatedTodo : todo)));\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages, todos]);\n\n  return (\n    <div className=\"App\">\n      <h1>Chrome Extension Chatbot</h1>\n      <div className=\"chat-container\" ref={chatContainerRef}>\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={handleSendMessage}>\n          <input type=\"text\" name=\"message\" className=\"message-input\" placeholder=\"Type your message...\" />\n          <button type=\"submit\" className=\"send-button\">Send</button>\n        </form>\n        <div className=\"todo-list\">\n          <h2>Your To-Do List</h2>\n          <ul>\n            {todos.map(todo => (\n              <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n                <span onClick={() => toggleTodoCompletion(todo.id)}>{todo.task}</span>\n                <button onClick={() => removeTodoTask(todo.id)}>Remove</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}